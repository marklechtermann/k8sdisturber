apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: k8sdisturber
  name: k8sdisturber
  namespace: k8sdisturber
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sdisturber
  template:
    metadata:
      labels:
        app: k8sdisturber
    spec:
      containers:
        - image: marklechtermann/k8sdisturber:20220817.2f667fb
          name: k8sdisturber
          # ports:
          #   - containerPort: 80
          imagePullPolicy: IfNotPresent
          # livenessProbe:
          #   httpGet:
          #     path: /api/livez
          #     port: 80
          #   initialDelaySeconds: 5
          #   periodSeconds: 3
          # readinessProbe:
          #   httpGet:
          #     path: /api/readyz
          #     port: 80
          #   periodSeconds: 3
          # resources:
          #   requests:
          #     memory: "100Mi"
          #     cpu: "250m"
          #   limits:
          #     memory: "200Mi"
          #     cpu: "1"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: k8sdisturber
#   name: k8sdisturber
#   namespace: k8sdisturber
# spec:
#   ports:
#     - port: 80
#       protocol: TCP
#       targetPort: 80
#   selector:
#     app: k8sdisturber
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: k8sdisturber
#   namespace: k8sdisturber
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: localhost
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: k8sdisturber
#                 port:
#                   number: 80
#     - host: wsl.local
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: k8sdisturber
#                 port:
#                   number: 80                  
